import { Plugin } from 'vite';

interface PermalinkOption {
    /**
     * 忽略的文件/文件夹列表，支持正则表达式
     *
     * @default []
     */
    ignoreList?: Array<RegExp | string>;
    /**
     * 文章所在的目录，基于 .vitepress 目录层级添加，开头不需要有 /
     * @default 'vitepress 的 srcDir 配置项'
     */
    path?: string;
}
interface NotFoundOption {
    /**
     * 404 页面延迟加载时间，单位为毫秒，仅限第一次进入页面或刷新/回退/前进页面生效
     *
     * VP 404 页面兼容 permalink 插件，因为 permalink 插件支持自定义 URL，但是 VP 初始化页面时根据自定义 URL 寻找文档会 404，因此需要延迟时间来给 permalink 插件寻找正确的文档路径
     * 如果发现刷新页面有 404 页面短暂出现，则将 notFoundDelayLoad 配置项的时间调大
     *
     * @default 500
     */
    notFoundDelayLoad?: number;
}
interface Permalink {
    /**
     * key 为文件相对路径，value 为永久链接
     */
    map: Record<string, string>;
    /**
     * key 为永久链接，value 为文件相对路径
     */
    inv: Record<string, string>;
}

/**
 * 默认暴露 2 个插件集
 */
declare function VitePluginVitePressPermalink(option?: {
    permalinkOption?: PermalinkOption;
    notFoundOption?: NotFoundOption;
}): (Plugin<any> & {
    name: string;
})[];
/**
 * 扫描项目目录，生成 permalink
 */
declare function VitePluginVitePressAutoPermalink(option?: PermalinkOption): Plugin & {
    name: string;
};
/**
 * 1、将 UsePermalink 组件传入 VitePress 的 layout-bottom 插槽
 * 2、将 NotFoundDelay 组件传入 VitePress 的 not-found 插槽
 */
declare function VitePluginVitePressUsePermalink(option?: NotFoundOption): Plugin & {
    name: string;
};

export { type NotFoundOption, type Permalink, type PermalinkOption, VitePluginVitePressAutoPermalink, VitePluginVitePressUsePermalink, VitePluginVitePressPermalink as default };
