import { defineComponent, computed, createElementBlock, openBlock, Fragment, renderSlot, createBlock, createCommentVNode, unref, normalizeStyle, normalizeClass, withCtx, createElementVNode, renderList, toDisplayString } from 'vue';
import { withBase } from 'vitepress';
import { useLocale } from '../../../../composables/useLocale.mjs';
import { useNamespace } from '../../../../composables/useNamespace.mjs';
import '../../../../composables/useZIndex.mjs';
import { useTeekConfig } from '../../ConfigProvider/index.mjs';
import _sfc_main$1 from '../../../common/PageCard/src/index.vue2.mjs';
import _sfc_main$2 from '../../../common/Avatar/src/index.vue2.mjs';
import _sfc_main$3 from '../../../common/Icon/src/index.vue2.mjs';
import '@iconify/vue';

const _hoisted_1 = ["aria-label"];
const _hoisted_2 = ["href", "title", "aria-label"];
const _hoisted_3 = ["aria-label"];
const _hoisted_4 = { class: "name" };
const _hoisted_5 = { class: "slogan" };
var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "HomeMyCard" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace("my");
    const { t } = useLocale();
    const { getTeekConfigRef } = useTeekConfig();
    const blogger = getTeekConfigRef("blogger", { shape: "square", circleBgMask: true });
    const social = getTeekConfigRef("social", []);
    const shape = computed(() => blogger.value.shape.replace(/-.*$/, ""));
    const isCircleBgImg = computed(() => shape.value === "circle" && !!blogger.value.circleBgImg);
    const avatarBgStyle = computed(() => ({ backgroundImage: `url(${withBase(blogger.value.circleBgImg)})` }));
    const myCardColorStyle = computed(() => ({ color: blogger.value.color }));
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(
        Fragment,
        null,
        [
          renderSlot(_ctx.$slots, "teek-home-card-my-before"),
          renderSlot(_ctx.$slots, "teek-home-card-my", {}, () => [
            unref(blogger).name ? (openBlock(), createBlock(unref(_sfc_main$1), {
              key: 0,
              class: normalizeClass([unref(ns).b(), unref(ns).is("circle-bg", isCircleBgImg.value)]),
              style: normalizeStyle(myCardColorStyle.value),
              "aria-label": unref(t)("tk.myCard.label")
            }, {
              default: withCtx(() => [
                isCircleBgImg.value ? (openBlock(), createElementBlock(
                  "div",
                  {
                    key: 0,
                    class: normalizeClass([unref(ns).em("avatar__circle", "bg"), unref(ns).is("mask", unref(blogger).circleBgMask)]),
                    style: normalizeStyle(avatarBgStyle.value)
                  },
                  null,
                  6
                  /* CLASS, STYLE */
                )) : createCommentVNode("v-if", true),
                createElementVNode(
                  "div",
                  {
                    class: normalizeClass(`${unref(ns).e("avatar")} ${unref(blogger).shape} flx-center`)
                  },
                  [
                    unref(blogger).avatar ? (openBlock(), createBlock(unref(_sfc_main$2), {
                      key: 0,
                      src: unref(withBase)(unref(blogger).avatar),
                      size: unref(blogger).shape === "square" ? "100%" : 100,
                      shape: shape.value,
                      "bg-color": "transparent",
                      alt: unref(t)("tk.myCard.avatarAlt"),
                      title: unref(t)("tk.myCard.avatarTitle"),
                      "aria-hidden": "true"
                    }, null, 8, ["src", "size", "shape", "alt", "title"])) : (openBlock(), createBlock(unref(_sfc_main$2), {
                      key: 1,
                      size: 100,
                      shape: shape.value,
                      text: unref(blogger).name,
                      "text-size": 50,
                      "bg-color": unref(ns).cssVar("theme-color"),
                      "aria-hidden": "true"
                    }, null, 8, ["shape", "text", "bg-color"]))
                  ],
                  2
                  /* CLASS */
                ),
                unref(social).length ? (openBlock(), createElementBlock("div", {
                  key: 1,
                  class: normalizeClass(`${unref(ns).e("icons")} flx-justify-around`),
                  "aria-label": unref(t)("tk.myCard.socialLabel")
                }, [
                  (openBlock(true), createElementBlock(
                    Fragment,
                    null,
                    renderList(unref(social), (item, index) => {
                      return openBlock(), createElementBlock("a", {
                        key: index,
                        href: item.link && unref(withBase)(item.link),
                        title: item.name,
                        target: "_blank",
                        "aria-label": item.name
                      }, [
                        item.icon ? (openBlock(), createBlock(unref(_sfc_main$3), {
                          key: 0,
                          iconType: item.iconType,
                          icon: item.icon,
                          size: "20px",
                          hover: "",
                          imgAlt: item.imgAlt,
                          "aria-hidden": "true"
                        }, null, 8, ["iconType", "icon", "imgAlt"])) : createCommentVNode("v-if", true)
                      ], 8, _hoisted_2);
                    }),
                    128
                    /* KEYED_FRAGMENT */
                  ))
                ], 10, _hoisted_1)) : createCommentVNode("v-if", true),
                createElementVNode("div", {
                  class: normalizeClass(unref(ns).e("blogger")),
                  "aria-label": unref(t)("tk.myCard.bloggerLabel")
                }, [
                  createElementVNode(
                    "h3",
                    _hoisted_4,
                    toDisplayString(unref(blogger).name),
                    1
                    /* TEXT */
                  ),
                  createElementVNode(
                    "span",
                    _hoisted_5,
                    toDisplayString(unref(blogger).slogan),
                    1
                    /* TEXT */
                  )
                ], 10, _hoisted_3)
              ]),
              _: 1
              /* STABLE */
            }, 8, ["class", "style", "aria-label"])) : createCommentVNode("v-if", true)
          ]),
          renderSlot(_ctx.$slots, "teek-home-card-my-after")
        ],
        64
        /* STABLE_FRAGMENT */
      );
    };
  }
});

export { _sfc_main as default };
