import { defineComponent, computed, createElementBlock, openBlock, normalizeClass, unref, renderSlot, createVNode, createBlock, createCommentVNode, createSlots, renderList, withCtx } from 'vue';
import { useData } from 'vitepress';
import { isBoolean } from '../../../../helper/dist/index.mjs';
import { useTeekConfig } from '../../ConfigProvider/index.mjs';
import _sfc_main$3 from '../../ThemeEnhance/src/index.vue2.mjs';
import { mobileMaxWidthMedia } from '../../ThemeEnhance/src/themeEnhance.mjs';
import { useMediaQuery } from '../../../../composables/useMediaQuery.mjs';
import '../../../../composables/useZIndex.mjs';
import { ns } from './namespace.mjs';
import _sfc_main$1 from './BackTop.vue2.mjs';
import _sfc_main$2 from './ToComment.vue2.mjs';
import _sfc_main$4 from './ThemeColor.vue2.mjs';

var _sfc_main = /* @__PURE__ */ defineComponent({
  ...{ name: "RightBottomButton" },
  __name: "index",
  setup(__props) {
    const { getTeekConfigRef } = useTeekConfig();
    const themeEnhanceConfig = getTeekConfigRef("themeEnhance", {});
    const teekConfig = getTeekConfigRef(null, { comment: { provider: "" } });
    const { frontmatter } = useData();
    const commentConfig = computed(() => {
      const comment = frontmatter.value.comment ?? teekConfig.value.comment;
      if (isBoolean(comment)) return { enabled: comment };
      return { enabled: true, provider: comment.provider };
    });
    const isMobile = useMediaQuery(mobileMaxWidthMedia);
    const disabledThemeColor = computed(() => {
      const { themeColor = {} } = themeEnhanceConfig.value;
      return !isMobile.value || (themeColor.disabled ?? themeColor.disabledInMobile);
    });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock(
        "div",
        {
          class: normalizeClass([unref(ns).b(), unref(ns).joinNamespace("wallpaper-outside"), "flx-column"])
        },
        [
          renderSlot(_ctx.$slots, "teek-right-bottom-before"),
          createVNode(_sfc_main$1),
          commentConfig.value.enabled && commentConfig.value.provider ? (openBlock(), createBlock(_sfc_main$2, { key: 0 })) : createCommentVNode("v-if", true),
          !unref(isMobile) && unref(themeEnhanceConfig).position === "bottom" ? (openBlock(), createBlock(unref(_sfc_main$3), {
            key: 1,
            class: normalizeClass(unref(ns).e("button")),
            position: "bottom",
            "y-offset": 7
          }, createSlots({
            _: 2
            /* DYNAMIC */
          }, [
            renderList(_ctx.$slots, (_, name) => {
              return {
                name,
                fn: withCtx(() => [
                  renderSlot(_ctx.$slots, name)
                ])
              };
            })
          ]), 1032, ["class"])) : createCommentVNode("v-if", true),
          !disabledThemeColor.value ? (openBlock(), createBlock(_sfc_main$4, { key: 2 })) : createCommentVNode("v-if", true),
          renderSlot(_ctx.$slots, "teek-right-bottom-after")
        ],
        2
        /* CLASS */
      );
    };
  }
});

export { _sfc_main as default };
