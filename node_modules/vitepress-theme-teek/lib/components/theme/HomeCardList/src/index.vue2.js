'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var Vue = require('vue');
require('vitepress');
var useNamespace = require('../../../../composables/useNamespace.js');
require('../../../../composables/useZIndex.js');
var index = require('../../ConfigProvider/index.js');
var index_vue_vue_type_script_setup_true_name_HomeMyCard_lang = require('../../HomeMyCard/src/index.vue2.js');
var index_vue_vue_type_script_setup_true_name_HomeTopArticleCard_lang = require('../../HomeTopArticleCard/src/index.vue2.js');
var index_vue_vue_type_script_setup_true_name_HomeCategoryCard_lang = require('../../HomeCategoryCard/src/index.vue2.js');
var index_vue_vue_type_script_setup_true_name_HomeTagCard_lang = require('../../HomeTagCard/src/index.vue2.js');
var index_vue_vue_type_script_setup_true_name_HomeFriendLinkCard_lang = require('../../HomeFriendLinkCard/src/index.vue2.js');
var index_vue_vue_type_script_setup_true_name_HomeDocAnalysisCard_lang = require('../../HomeDocAnalysisCard/src/index.vue2.js');

var _sfc_main = /* @__PURE__ */ Vue.defineComponent({
  ...{ name: "HomeCardList" },
  __name: "index",
  setup(__props) {
    const ns = useNamespace.useNamespace("home-card-list");
    const { getTeekConfig } = index.useTeekConfig();
    const teekConfig = Vue.computed(() => getTeekConfig(null, {}));
    const finalHomeCardSort = Vue.computed(() => {
      const configCardSort = teekConfig.value.homeCardSort || [];
      return ["my", .../* @__PURE__ */ new Set([...configCardSort, ...["topArticle", "category", "tag", "friendLink", "docAnalysis"]])];
    });
    const { isHomePage, isCategoriesPage, isTagsPage } = index.usePageState();
    const componentMap = Vue.computed(() => {
      const { topArticle, category, tag, docAnalysis, friendLink } = teekConfig.value;
      const homePage = isHomePage.value;
      const categoriesPage = isCategoriesPage.value;
      const tagsPage = isTagsPage.value;
      return {
        my: {
          el: index_vue_vue_type_script_setup_true_name_HomeMyCard_lang.default,
          show: homePage,
          slot: ["-home-my-before", "-home-my-after"]
        },
        topArticle: {
          el: index_vue_vue_type_script_setup_true_name_HomeTopArticleCard_lang.default,
          show: homePage && topArticle?.enabled !== false,
          slot: ["-home-top-article-before", "-home-top-article-after"]
        },
        category: {
          el: index_vue_vue_type_script_setup_true_name_HomeCategoryCard_lang.default,
          props: { categoriesPage },
          show: (homePage || categoriesPage) && category?.enabled !== false,
          slot: ["-home-category-before", "-home-category-after"]
        },
        tag: {
          el: index_vue_vue_type_script_setup_true_name_HomeTagCard_lang.default,
          props: { tagsPage },
          show: (homePage || tagsPage) && tag?.enabled !== false,
          slot: ["-home-tag-before", "-home-tag-after"]
        },
        docAnalysis: {
          el: index_vue_vue_type_script_setup_true_name_HomeDocAnalysisCard_lang.default,
          show: homePage && docAnalysis?.enabled !== false,
          slot: ["-home-doc-analysis-before", "-home-doc-analysis-after"]
        },
        friendLink: {
          el: index_vue_vue_type_script_setup_true_name_HomeFriendLinkCard_lang.default,
          show: homePage && friendLink?.enabled !== false,
          slot: ["-home-friend-link-before", "-home-friend-link-after"]
        }
      };
    });
    return (_ctx, _cache) => {
      return Vue.openBlock(), Vue.createElementBlock(
        "div",
        {
          class: Vue.normalizeClass([Vue.unref(ns).b(), "flx-column"])
        },
        [
          Vue.renderSlot(_ctx.$slots, "teek-home-card-before"),
          Vue.renderSlot(_ctx.$slots, "teek-home-card", {}, () => [
            (Vue.openBlock(true), Vue.createElementBlock(
              Vue.Fragment,
              null,
              Vue.renderList(finalHomeCardSort.value, (item) => {
                return Vue.openBlock(), Vue.createElementBlock(
                  Vue.Fragment,
                  { key: item },
                  [
                    componentMap.value[item]?.show ? (Vue.openBlock(), Vue.createBlock(
                      Vue.resolveDynamicComponent(componentMap.value[item]?.el),
                      Vue.mergeProps({
                        key: 0,
                        ref_for: true
                      }, componentMap.value[item]?.props),
                      Vue.createSlots({
                        _: 2
                        /* DYNAMIC */
                      }, [
                        Vue.renderList(componentMap.value[item]?.slot, (name) => {
                          return {
                            name,
                            fn: Vue.withCtx(() => [
                              Vue.renderSlot(_ctx.$slots, name)
                            ])
                          };
                        })
                      ]),
                      1040
                      /* FULL_PROPS, DYNAMIC_SLOTS */
                    )) : Vue.createCommentVNode("v-if", true)
                  ],
                  64
                  /* STABLE_FRAGMENT */
                );
              }),
              128
              /* KEYED_FRAGMENT */
            ))
          ]),
          Vue.renderSlot(_ctx.$slots, "teek-home-card-after")
        ],
        2
        /* CLASS */
      );
    };
  }
});

exports.default = _sfc_main;
